version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  # aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID}
jobs:
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name back-end-${CIRCLE_WORKFLOW_ID} \
              --region us-east-1
  
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
              fingerprints: ["e1:08:a0:c5:07:2a:65:ff:23:64:f0:7c:19:9f:ad:69"] 
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory.txt main-deploy.yml

  smoke_test:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - run: apk add --update curl
      - run: pip install awscli
      - run:
          name: smoke test
          command: |
            URL="https://blog.udadcity.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi
     # - run: return 1
      - destroy_environment 

workflows:
  myWorkflow:
    jobs:
      - create_infrastructure
    # - configure_infrastructure
      - smoke_test:
          requires:
            - create_infrastructure







#  smoke_test:
#    docker:
#      - image: amazon/aws-cli
#    steps:
#      - run: apk add --update curl
#      - run:
#          name: smoke test
#          command: |
#            URL="https://blog.udadcity.com/"
            # Test if website exists
#            if curl -s --head ${URL} 
#            then
#              return 0
#            else
#              return 1
#            fi
     # - run: return 1
     # - destroy_environment 